{"ast":null,"code":"import _asyncToGenerator from \"/Users/sistemasbatest/Documents/Personales/Proyectos/inmobiliaria-sb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authSvc, router) {\n    this.authSvc = authSvc;\n    this.router = router;\n    this.flag = false;\n  }\n\n  canActivate() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let userLog = localStorage.getItem('token');\n      let log = yield _this.authSvc.GetCurrentUser();\n\n      if (log == null) {\n        _this.router.navigateByUrl('/login');\n      }\n\n      log.uid == userLog ? _this.flag = true : _this.router.navigateByUrl('/login');\n      return _this.flag;\n    })();\n  }\n\n}\n\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\n\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/Users/sistemasbatest/Documents/Personales/Proyectos/inmobiliaria-sb/src/app/shared/authguard.guard.ts"],"names":["i0","i1","i2","AuthGuard","constructor","authSvc","router","flag","canActivate","userLog","localStorage","getItem","log","GetCurrentUser","navigateByUrl","uid","ɵfac","AuthGuard_Factory","t","ɵɵinject","AuthService","Router","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,0BAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,OAAO,MAAMC,SAAN,CAAgB;AACnBC,EAAAA,WAAW,CAACC,OAAD,EAAUC,MAAV,EAAkB;AACzB,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,IAAL,GAAY,KAAZ;AACH;;AACKC,EAAAA,WAAW,GAAG;AAAA;;AAAA;AAChB,UAAIC,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAIC,GAAG,SAAS,KAAI,CAACP,OAAL,CAAaQ,cAAb,EAAhB;;AACA,UAAID,GAAG,IAAI,IAAX,EAAiB;AACb,QAAA,KAAI,CAACN,MAAL,CAAYQ,aAAZ,CAA0B,QAA1B;AACH;;AACDF,MAAAA,GAAG,CAACG,GAAJ,IAAWN,OAAX,GAAsB,KAAI,CAACF,IAAL,GAAY,IAAlC,GAA0C,KAAI,CAACD,MAAL,CAAYQ,aAAZ,CAA0B,QAA1B,CAA1C;AACA,aAAO,KAAI,CAACP,IAAZ;AAPgB;AAQnB;;AAdkB;;AAgBvBJ,SAAS,CAACa,IAAV,GAAiB,SAASC,iBAAT,CAA2BC,CAA3B,EAA8B;AAAE,SAAO,KAAKA,CAAC,IAAIf,SAAV,EAAqBH,EAAE,CAACmB,QAAH,CAAYlB,EAAE,CAACmB,WAAf,CAArB,EAAkDpB,EAAE,CAACmB,QAAH,CAAYjB,EAAE,CAACmB,MAAf,CAAlD,CAAP;AAAmF,CAApI;;AACAlB,SAAS,CAACmB,KAAV,GAAkB,aAActB,EAAE,CAACuB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAErB,SAAT;AAAoBsB,EAAAA,OAAO,EAAEtB,SAAS,CAACa,IAAvC;AAA6CU,EAAAA,UAAU,EAAE;AAAzD,CAAtB,CAAhC","sourcesContent":["import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n    constructor(authSvc, router) {\n        this.authSvc = authSvc;\n        this.router = router;\n        this.flag = false;\n    }\n    async canActivate() {\n        let userLog = localStorage.getItem('token');\n        let log = await this.authSvc.GetCurrentUser();\n        if (log == null) {\n            this.router.navigateByUrl('/login');\n        }\n        log.uid == userLog ? (this.flag = true) : this.router.navigateByUrl('/login');\n        return this.flag;\n    }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) { return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router)); };\nAuthGuard.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuthGuard, factory: AuthGuard.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}