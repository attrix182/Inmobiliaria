{"ast":null,"code":"import _asyncToGenerator from \"/Users/sistemasbatest/Documents/Personales/Proyectos/inmobiliaria-sb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/auth\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(afAuth, router) {\n    this.afAuth = afAuth;\n    this.router = router;\n    this.isLogged = false;\n    afAuth.authState.subscribe(user => this.isLogged = user);\n  }\n\n  onLogin(user) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const result = yield _this.afAuth.signInWithEmailAndPassword(user.email, user.password).then(userCredential => {\n        localStorage.setItem('token', userCredential.user.uid);\n        return true;\n      });\n      return result;\n    })();\n  }\n\n  onRegister(user) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        return yield _this2.afAuth.createUserWithEmailAndPassword(user.correo, user.clave);\n      } catch (error) {\n        return error;\n      }\n    })();\n  }\n\n  GetCurrentUser() {\n    return this.afAuth.authState.pipe(first()).toPromise();\n  }\n\n  LogOutCurrentUser() {\n    localStorage.removeItem('token');\n    this.afAuth.signOut();\n    this.router.navigateByUrl('/');\n  }\n\n}\n\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.AngularFireAuth), i0.ɵɵinject(i2.Router));\n};\n\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/Users/sistemasbatest/Documents/Personales/Proyectos/inmobiliaria-sb/src/app/services/auth.service.ts"],"names":["first","i0","i1","i2","AuthService","constructor","afAuth","router","isLogged","authState","subscribe","user","onLogin","result","signInWithEmailAndPassword","email","password","then","userCredential","localStorage","setItem","uid","onRegister","createUserWithEmailAndPassword","correo","clave","error","GetCurrentUser","pipe","toPromise","LogOutCurrentUser","removeItem","signOut","navigateByUrl","ɵfac","AuthService_Factory","t","ɵɵinject","AngularFireAuth","Router","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,KAAT,QAAsB,gBAAtB;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,oBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,OAAO,MAAMC,WAAN,CAAkB;AACrBC,EAAAA,WAAW,CAACC,MAAD,EAASC,MAAT,EAAiB;AACxB,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACAF,IAAAA,MAAM,CAACG,SAAP,CAAiBC,SAAjB,CAA4BC,IAAD,IAAW,KAAKH,QAAL,GAAgBG,IAAtD;AACH;;AACKC,EAAAA,OAAO,CAACD,IAAD,EAAO;AAAA;;AAAA;AAChB,YAAME,MAAM,SAAS,KAAI,CAACP,MAAL,CAChBQ,0BADgB,CACWH,IAAI,CAACI,KADhB,EACuBJ,IAAI,CAACK,QAD5B,EAEhBC,IAFgB,CAEVC,cAAD,IAAoB;AAC1BC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,cAAc,CAACP,IAAf,CAAoBU,GAAlD;AACA,eAAO,IAAP;AACH,OALoB,CAArB;AAMA,aAAOR,MAAP;AAPgB;AAQnB;;AACKS,EAAAA,UAAU,CAACX,IAAD,EAAO;AAAA;;AAAA;AACnB,UAAI;AACA,qBAAa,MAAI,CAACL,MAAL,CAAYiB,8BAAZ,CAA2CZ,IAAI,CAACa,MAAhD,EAAwDb,IAAI,CAACc,KAA7D,CAAb;AACH,OAFD,CAGA,OAAOC,KAAP,EAAc;AACV,eAAOA,KAAP;AACH;AANkB;AAOtB;;AACDC,EAAAA,cAAc,GAAG;AACb,WAAO,KAAKrB,MAAL,CAAYG,SAAZ,CAAsBmB,IAAtB,CAA2B5B,KAAK,EAAhC,EAAoC6B,SAApC,EAAP;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAChBX,IAAAA,YAAY,CAACY,UAAb,CAAwB,OAAxB;AACA,SAAKzB,MAAL,CAAY0B,OAAZ;AACA,SAAKzB,MAAL,CAAY0B,aAAZ,CAA0B,GAA1B;AACH;;AA/BoB;;AAiCzB7B,WAAW,CAAC8B,IAAZ,GAAmB,SAASC,mBAAT,CAA6BC,CAA7B,EAAgC;AAAE,SAAO,KAAKA,CAAC,IAAIhC,WAAV,EAAuBH,EAAE,CAACoC,QAAH,CAAYnC,EAAE,CAACoC,eAAf,CAAvB,EAAwDrC,EAAE,CAACoC,QAAH,CAAYlC,EAAE,CAACoC,MAAf,CAAxD,CAAP;AAAyF,CAA9I;;AACAnC,WAAW,CAACoC,KAAZ,GAAoB,aAAcvC,EAAE,CAACwC,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEtC,WAAT;AAAsBuC,EAAAA,OAAO,EAAEvC,WAAW,CAAC8B,IAA3C;AAAiDU,EAAAA,UAAU,EAAE;AAA7D,CAAtB,CAAlC","sourcesContent":["import { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/auth\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n    constructor(afAuth, router) {\n        this.afAuth = afAuth;\n        this.router = router;\n        this.isLogged = false;\n        afAuth.authState.subscribe((user) => (this.isLogged = user));\n    }\n    async onLogin(user) {\n        const result = await this.afAuth\n            .signInWithEmailAndPassword(user.email, user.password)\n            .then((userCredential) => {\n            localStorage.setItem('token', userCredential.user.uid);\n            return true;\n        });\n        return result;\n    }\n    async onRegister(user) {\n        try {\n            return await this.afAuth.createUserWithEmailAndPassword(user.correo, user.clave);\n        }\n        catch (error) {\n            return error;\n        }\n    }\n    GetCurrentUser() {\n        return this.afAuth.authState.pipe(first()).toPromise();\n    }\n    LogOutCurrentUser() {\n        localStorage.removeItem('token');\n        this.afAuth.signOut();\n        this.router.navigateByUrl('/');\n    }\n}\nAuthService.ɵfac = function AuthService_Factory(t) { return new (t || AuthService)(i0.ɵɵinject(i1.AngularFireAuth), i0.ɵɵinject(i2.Router)); };\nAuthService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuthService, factory: AuthService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}